{
  cassandra {
    hosts = ["localhost"]
    port = 9042
    keyspace = "filodb"
  }

  columnstore {
    # Number of cache entries for the table cache
    tablecache-size = 50

    # Number of ChunkRowMap entries to cache
    segment-cache-size = 1000
  }

  memtable {
    # Uncomment to enable mmap-file based memtable for persistence and easy recovery upon crashes.
    # Defaults to in-memory DB only which is lost upon restarts/crashes, but easier for testing.
    # local-filename = "/tmp/filodb.memtable"

    # Maximum rows per dataset/version before ingestRows throws back a PleaseWait.
    max-rows-per-table = 200000

    # Number of rows in memtable before flushes start being triggered
    flush-trigger-rows = 50000

    # The minimum amount of free memory required to accept new rows into memtable
    min-free-mb = 700

    # Chunk size for FiloMemTable - determines minimum # of rows before serializing to chunks
    filo.chunksize = 1000

    # Maximum delay before new rows in FiloMemTable are flushed to WAL and turned into chunks.
    # The bigger this is, the less WAL disk activity, but also the longer before ingestRows
    # returns acknowledgement.  Think of it as max delay before new ingested rows are guaranteed
    # to be recovered.
    flush.interval = 1 s
  }

  coordinator {
  }

  # The maximum number of outstanding reprojection futures (one per segment being flushed) across all
  # datasets.  Each future requires memory (for the binary Filo columnar chunks and other state), so
  # if tight on memory, reduce this number.
  # However if you find ingestion hanging, raise this number.  If the dataset has very fine partitions,
  # this number may need to be raised.
  max-reprojection-futures = 256

  # Thread pool size for filodb.core reprojection and I/O tasks.
  core-futures-pool-size = 8
}
